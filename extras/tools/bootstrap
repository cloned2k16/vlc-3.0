#!/bin/sh

	check_tar() {
		if ! tar PcJ /dev/null >/dev/null 2>&1
		then
			echo "tar doesn't support xz (J option)"
			NEEDED="$NEEDED .tar .xz"
		fi
	}

	export LC_ALL=
		   NEEDED=

	check_sed() {
		tmp="`pwd`/check_sed"
		trap "rm \"$tmp\" \"$tmp-e\" 2>/dev/null" EXIT
		echo "test file for GNU sed" > $tmp
		if ! sed -i -e 's/sed//' $tmp >/dev/null 2>&1
		then
			echo "sed doesn't do in-place editing (-i option)"
			NEEDED="$NEEDED .sed"
		fi
	}

	check() {
		echo " .. check $1"
		if ! $1 --version >/dev/null 2>&1 && ! $1 -version >/dev/null 2>&1
		then
			echo "$1 not found"
			NEEDED="$NEEDED .$1"
		else
			# found, need to check version ?
			[ -z "$2" ] && return # no
			gotver=`$1 --version | head -1 | sed s/'.* '//`
			gotmajor=`echo $gotver|cut -d. -f1`
			gotminor=`echo $gotver|cut -d. -f2`
			gotmicro=`echo $gotver|cut -d. -f3`
			[ -z "$gotmicro" ] && gotmicro=0
			needmajor=`echo $2|cut -d. -f1`
			needminor=`echo $2|cut -d. -f2`
			needmicro=`echo $2|cut -d. -f3`
			[ -z "$needmicro" ] && needmicro=0
			if [ "$needmajor" -ne "$gotmajor" \
				-o "$needmajor" -eq "$gotmajor" -a "$needminor" -gt "$gotminor" \
				-o "$needmajor" -eq "$gotmajor" -a "$needminor" -eq "$gotminor" -a "$needmicro" -gt "$gotmicro" ]
			then
				echo "$1 too old"
				NEEDED="$NEEDED .$1"
			fi
		fi
	}
	
	bootstrapExtraTools (){


		[ ! -f tools.mak ] && echo "Error!: this file expect to be executed in ./extras/tools folder."

		check_tar

		check autoconf 2.69
		## v1.15 --> Unescaped left brace in regex is deprecated, passed through in regex; .... build/bin/automake line 3936.
		check automake 1.16
		check m4 1.4.16
		check libtool 2.4
		check pkg-config
		check cmake 3.8.2
		check yasm
		check ragel
		check_sed
		check ant
		check xz
		check bison 3.0.0
		check flex
		check protoc 3.1.0
		check gettext 0.19.8.1
		#check gas

		[ -n "$NEEDED" ] && mkdir -p build/ && echo "\nTo-be-built packages: `echo $NEEDED | sed 's/\.//g'`" || echo "\n${0#*/}: Nothing to be done."

		CPUS=
		case `uname` in
			Linux|MINGW32*|MINGW64*)
				CPUS=`getconf _NPROCESSORS_ONLN 2>&1`
			;;
			Darwin|FreeBSD|NetBSD)
				CPUS=`getconf NPROCESSORS_ONLN 2>&1`
			;;
			OpenBSD)
				CPUS=`sysctl -n hw.ncpu 2>&1`
			;;
			SunOS)
				CPUS=`psrinfo | wc -l 2>&1`
			;;
			*)
				CPUS=1  # default
			;;
		esac

		#force only one
		CPUS=1


		cat > Makefile << EOF

MAKEFLAGS += -j$CPUS
CMAKEFLAGS += --parallel=$CPUS
PREFIX=\$(abspath ./build)

include tools.mak

all: $NEEDED
	@echo "You are ready to build VLC and its contribs"

EOF
		unset -f check 
		unset -f check_sed
		unset -f check_tar
		unset -f bootstrapExtraTools
	}

bootstrapExtraTools


